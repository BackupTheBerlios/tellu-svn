#!/usr/bin/perl

my ($pack, $f, $line) = caller;

if($pack eq "" && $f eq "" && $line eq "") {
	print STDOUT "Content-Type: text/html" . "\r\n\r\n";

	exit(0);
}

require "chest.lib";
require "network.lib";
require "prefs.lib";

sub menuMachineDomain {
	my ($arg) = @_;

	@r = &sendCommand({ command => "listMachine", item => "", domain => "", param => "domain", option => "" });

	if(checkError({ packet => \@r }) == 0) {
		my @o = ();
		my @t = ();
		my %l = ();

		if($r[3] && $r[3] ne "") {
			$t[0] = $q->optgroup( -name => "Domain Groups", -values => [ "Global summary", "Global listing" ], -class => "header" );

			foreach my $e (split(/$ITEM_DELIMITER/, $r[3])) {
				$e =~ s/$ITEM_SEPARATOR$//;

				push @o, $e;
				$l{$e} = $e;
			}

			$t[1] = $q->optgroup( -name => "Domains", -values => \@o, -class => "header" );

			$PAGE .= &htmlFormBegin({ name => "domainsForm", action => $SELF, enctype => "application/x-www-form-urlencoded", method => "post" });

			$PAGE .= &htmlSelectMenu({ name => "machineDomain", value => \@t, label => \%l, select => $arg->{select} });
			$PAGE .= "&nbsp;";
			$PAGE .= &htmlButtonSubmit({ name => "submit", value => "Switch >>" });

			$PAGE .= &htmlFormEnd();

			$PAGE .= "<p>&nbsp;</p>";
		}
		else {
			@t[0] = 0;
			$l{0} = "No items available";

			$PAGE .= &htmlFormBegin({ name => "domainsForm", action => $SELF, enctype => "application/x-www-form-urlencoded", method => "post" });

			$PAGE .= &htmlSelectMenu({ name => "machineDomain", value => \@t, label => \%l, select => $arg->{select}, disabled => 1 });
			$PAGE .= "&nbsp;";
			$PAGE .= &htmlButtonSubmit({ name => "submit", value => "Switch >>", disabled => 1 });

			$PAGE .= &htmlFormEnd();

			$PAGE .= "<p>&nbsp;</p>";
		}

		return(0);
	}

	return(-1);
}

sub menuDMachineDomain {
	my ($arg) = @_;

	@r = &sendCommand({ command => "listDisposedMachine", item => "", domain => "", param => "domain", option => "" });

	if(checkError({ packet => \@r }) == 0) {
		my @o = ();
		my @t = ();
		my %l = ();

		if($r[3] && $r[3] ne "") {
			$t[0] = $q->optgroup( -name => "Domain Groups", -values => [ "Global summary", "Global listing" ], -class => "header" );

			foreach my $e (split(/$ITEM_DELIMITER/, $r[3])) {
				$e =~ s/$ITEM_SEPARATOR$//;

				push @o, $e;
				$l{$e} = $e;
			}

			$t[1] = $q->optgroup( -name => "Domains", -values => \@o, -class => "header" );

			$PAGE .= &htmlFormBegin({ name => "domainsDisposedForm", action => $SELF, enctype => "application/x-www-form-urlencoded", method => "post" });

			$PAGE .= &htmlSelectMenu({ name => "machineDomain", value => \@t, label => \%l, select => $arg->{select} });
			$PAGE .= "&nbsp;";
			$PAGE .= &htmlButtonSubmit({ name => "submit", value => "Switch >>" });

			$PAGE .= &htmlFormEnd();

			$PAGE .= "<p>&nbsp;</p>";
		}
		else {
			@t[0] = 0;
			$l{0} = "No items available";

			$PAGE .= &htmlFormBegin({ name => "domainsDisposedForm", action => $SELF, enctype => "application/x-www-form-urlencoded", method => "post" });

			$PAGE .= &htmlSelectMenu({ name => "machineDomain", value => \@t, label => \%l, select => $arg->{select}, disabled => 1 });
			$PAGE .= "&nbsp;";
			$PAGE .= &htmlButtonSubmit({ name => "submit", value => "Switch >>", disabled => 1 });

			$PAGE .= &htmlFormEnd();

			$PAGE .= "<p>&nbsp;</p>";
		}

		return(0);
	}

	return(-1);
}

sub menuMachineNode {
	my ($arg) = @_;

	@r = &sendCommand({ command => "listMachine", item => "", domain => $arg->{domain}, param => "node,node_id", option => "" });

	if(checkError({ packet => \@r }) == 0) {
		my @o = ();
		my @t = ();
		my %l = ();

		if($r[3] && $r[3] ne "") {
			$t[0] = $q->optgroup( -name => "Node Groups", -values => [ "Domain summary", "Domain listing" ], -class => "header" );

			foreach my $e (split(/$ITEM_DELIMITER/, $r[3])) {
				my ($node, $id) = split(/$ITEM_SEPARATOR/, $e);

				push @o, $node;
				$l{$node} = $node;
			}

			$t[1] = $q->optgroup( -name => "Nodes", -values => \@o, -class => "header" );

			$PAGE .= &htmlFormBegin({ name => "nodesForm", action => $SELF, enctype => "application/x-www-form-urlencoded", method => "post" });

			$PAGE .= &htmlSelectMenu({ name => "machineNode", value => \@t, label => \%l, select => $arg->{select} });
			$PAGE .= "&nbsp;";
			$PAGE .= &htmlButtonSubmit({ name => "submit", value => "Switch >>" });

			$PAGE .= &htmlFormEnd();

			$PAGE .= "<p>&nbsp;</p>";
		}
		else {
			@t[0] = 0;
			$l{0} = "No items available";

			$PAGE .= &htmlFormBegin({ name => "nodesForm", action => $SELF, enctype => "application/x-www-form-urlencoded", method => "post" });

			$PAGE .= &htmlSelectMenu({ name => "machineNode", value => \@t, label => \%l, select => $arg->{select}, disabled => 1 });
			$PAGE .= "&nbsp;";
			$PAGE .= &htmlButtonSubmit({ name => "submit", value => "Switch >>", disabled => 1 });

			$PAGE .= &htmlFormEnd();

			$PAGE .= "<p>&nbsp;</p>";
		}

		return(0);
	}

	return(-1);
}

sub menuDMachineNode {
	my ($arg) = @_;

	@r = &sendCommand({ command => "listDisposedMachine", item => "", domain => $arg->{domain}, param => "node,node_id", option => "" });

	if(checkError({ packet => \@r }) == 0) {
		my @o = ();
		my @t = ();
		my %l = ();

		if($r[3] && $r[3] ne "") {
			$t[0] = $q->optgroup( -name => "Node Groups", -values => [ "Domain summary", "Domain listing" ], -class => "header" );

			foreach my $e (split(/$ITEM_DELIMITER/, $r[3])) {
				my ($node, $id) = split(/$ITEM_SEPARATOR/, $e);

				push @o, $node;
				$l{$node} = $node;
			}

			$t[1] = $q->optgroup( -name => "Nodes", -values => \@o, -class => "header" );

			$PAGE .= &htmlFormBegin({ name => "nodesDisposedForm", action => $SELF, enctype => "application/x-www-form-urlencoded", method => "post" });

			$PAGE .= &htmlSelectMenu({ name => "machineNode", value => \@t, label => \%l, select => $arg->{select} });
			$PAGE .= "&nbsp;";
			$PAGE .= &htmlButtonSubmit({ name => "submit", value => "Switch >>" });

			$PAGE .= &htmlFormEnd();

			$PAGE .= "<p>&nbsp;</p>";
		}
		else {
			@t[0] = 0;
			$l{0} = "No items available";

			$PAGE .= &htmlFormBegin({ name => "nodesDisposedForm", action => $SELF, enctype => "application/x-www-form-urlencoded", method => "post" });

			$PAGE .= &htmlSelectMenu({ name => "machineNode", value => \@t, label => \%l, select => $arg->{select}, disabled => 1 });
			$PAGE .= "&nbsp;";
			$PAGE .= &htmlButtonSubmit({ name => "submit", value => "Switch >>", disabled => 1 });

			$PAGE .= &htmlFormEnd();

			$PAGE .= "<p>&nbsp;</p>";
		}

		return(0);
	}

	return(-1);
}

sub tableMachineBrief {
	my ($arg) = @_;

	$pr = "";

	if($arg->{slice} eq "security") {
		my $t = "Serial number,Security number,Location";
		my $m = "0,0,0";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 5; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "repair") {
		my $t = "Is in service,Estimated service duration,Date of service delivery,Method of service delivery,Repaired,Last repair date";
		my $m = "9,18,20,0,17,20";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 8; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "warranty") {
		my $t = "Acquired,Warranty";
		my $m = "20,19";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 14; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "addinfo") {
		my $t = "Additional information,Description";
		my $m = "0,0";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 16; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "cpu") {
		my $t = "Processors,Cores,Siblings,Speed,Cache,MIPS";
		my $m = "12,12,13,11,3,0";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "daemon") {
		my $t = "Command,Name,State,PID,PPID,Threads,VMdata,VMexe,VMhwm,VMlib,VMpeak,VMpte,VMrss,VMsize,VMstk,RChar,WChar,Syscr,Syscw,RByte,WByte,UID,GID";
		my $m = "0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "dev") {
		my $t = "Category,Product,Subsystem,Capabilities,Vendor,Parameters";
		my $m = "0,0,0,16,0,15";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "disk") {
		my $t = "Device,Path,Type,Options,Capacity,Available,Serial";
		my $m = "0,0,0,2,103,3,7";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "mem") {
		my $t = "Total RAM,Available RAM,Total swap,Available swap,Buffered RAM,Cached RAM";
		my $m = "3,3,3,3,3,3";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "nic") {
		my $t = "Interface,Address,Broadcast,Netmask,MAC";
		my $m = "0,0,0,0,0";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "node") {
		my $t = "System,Release,Distribution,Platform,Model";
		my $m = "0,0,0,0";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "system") {
		my $t = "Baseboard manufacturer,Baseboard product,Baseboard version,System family,System manufacturer,System product,System version";
		my $m = "0,0,0,0,0,0,0";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "port") {
		my $t = "TCP";
		my $m = "5";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "run") {
		my $t = "Processes,Threads";
		my $m = "0,0";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "proc") {
		my $t = "Command,Name,State,PID,PPID,Threads,VMdata,VMexe,VMhwm,VMlib,VMpeak,VMpte,VMrss,VMsize,VMstk,RChar,WChar,Syscr,Syscw,RByte,WByte,UID,GID";
		my $m = "0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "software") {
		my $t = "Class,Name,Version,Size,URL";
		my $m = "4,0,0,3,1";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "user") {
		my $t = "UID,Primary group,Real name,Home directory";
		my $m = "0,0,0,0";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "util") {
		my $t = "One minute load,Five minute load,Ten minute load,Uptime,Idletime";
		my $m = "0,0,0,6,6";

		&tableMachineBriefs({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
}

sub tableMachineBriefs {
	my ($arg) = @_;

	my @t = split(/,/, $arg->{title});
	my @m = split(/,/, $arg->{modifier});

	my @i = split(/$ITEM_DELIMITER/, $arg->{data});

	#
	# Create item hashs
	#

	foreach my $i (@i) {
		my @j = split(/$ITEM_SEPARATOR/, $i);

		shift(@j);

		for(my $k = 0; $k < @t; $k++) {
			my $s = "h" . $k;

			if($j[$k] && $j[$k] ne "" && $j[$k] ne "(null)") {
				my $r = &tableMachineClean({ item => $j[$k], flag => $m[$k], key => $arg->{key}, slice => $arg->{slice} });

				if($r && $r ne "") {
					$$s{$r}++;
				}
			}
		}
	}

	#
	# Create table header
	#

	$PAGE .= "<table class=\"default\" cellpadding=\"3\" cellspacing=\"1\">";
	$PAGE .= "<tr class=\"top\">";

	my $i = 1;

	foreach my $t (@t) {
		if(!$arg->{order} || $arg->{order} eq "a") {
			$PAGE .= "<td class=\"header\" onMouseOver=\"this.className='select'\" onMouseOut=\"this.className='header'\"><a href=\"" . $SELF . "?slice=" . $arg->{slice} . "&" . "sort=" . $i++ . "&" . "order=d" . "\">" . $t . "</a></td>";
		}
		else {
			$PAGE .= "<td class=\"header\" onMouseOver=\"this.className='select'\" onMouseOut=\"this.className='header'\"><a href=\"" . $SELF . "?slice=" . $arg->{slice} . "&" . "sort=" . $i++ . "&" . "order=a" . "\">" . $t . "</a></td>";
		}
	}

	$PAGE .= "</tr>";
	$PAGE .= "<tr class=\"top\">";

	#
	# Display and sort briefing in requested order
	#

	my $ev = 0;

	for(my $k = 0; $k < @t; $k++) {
		if($ev == 0) {
			$PAGE .= "<td class=\"c1\"><ul class=\"tight\">";
		}
		else {
			$PAGE .= "<td class=\"c2\"><ul class=\"tight\">";
		}

		$ev ^= 1;

		my $s = "h" . $k;
		my @v = ();

		while((my $l, $v) = each %$s) {
			push @v, $v . " " . $l;
		}

		if(!$arg->{order} || $arg->{order} eq "a") {
			@v = sort { $b <=> $a } @v;
		}
		else {
			@v = sort { $a <=> $b } @v;
		}

		#
		# Sort also individual items in briefing
		#

		my @of = ();
		my ($oe) = split(/\s+/, $v[0]);

		for(my $v = 0; $v < @v; $v++) {
			my ($e, $f) = split(/\s+/, $v[$v], 2);

			if($e == $oe) {
				push @of, $f;
			}

			if($e != $oe) {
				if(!$arg->{order} || $arg->{order} eq "a") {
					@of = sort { uc($a) cmp uc($b) } @of;
				}
				else {
					@of = sort { uc($b) cmp uc($a) } @of;
				}

				foreach my $o (@of) {
					$PAGE .= "<li>" . $oe . "&nbsp;pcs&nbsp;" . $o . "</li>";
				}

				$oe = $e;
				@of = ();

				push @of, $f;
			}
		}

		if(@of) {
			if(!$arg->{order} || $arg->{order} eq "a") {
				@of = sort { uc($a) cmp uc($b) } @of;
			}
			else {
				@of = sort { uc($b) cmp uc($a) } @of;
			}

			foreach my $o (@of) {
				$PAGE .= "<li>" . $oe . "&nbsp;pcs&nbsp;" . $o . "</li>";
			}
		}
		else {
			$PAGE .= "n/a";
		}

		$PAGE .= "</ul></td>";
	}

	$PAGE .= "</tr>";
	$PAGE .= "</table>";
}

sub tableMachineDetail {
	my ($arg) = @_;

	$pr = "";

	if($arg->{slice} eq "security") {
		my $t = "Serial number,Security number,Location";
		my $m = "0,0,0";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 5; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "repair") {
		my $t = "Is in service,Estimated service duration,Date of service delivery,Method of service delivery,Repaired,Last repair date";
		my $m = "9,18,20,0,17,20";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 8; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "warranty") {
		my $t = "Acquired,Warranty";
		my $m = "20,19";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 14; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "addinfo") {
		my $t = "Additional information,Description";
		my $m = "0,0";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 16; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "fle" || $arg->{slice} eq "files") {
		my $t = "Owner,Name,Filename,Size,Public,Description,Additional information";
		my $m = "0,0,14,3,9,0,0";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			my @s = split(/$ITEM_SEPARATOR/, $i);

			$s[3] .= "|" . $s[8];
			$i = join($ITEM_SEPARATOR, @s);

			push @j, $i;
		}

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "pwd" || $arg->{slice} eq "passwds") {
		my $t = "Owner,Name,Service,Username,Password,Public,Description,Additional information";
		my $m = "0,0,0,0,8,9,0,0";

		&tableMachineDetails({ slice => $arg->{slice}, key => $arg->{key}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "cpu") {
		my $t = "Processors,Cores,Siblings,Speed,Cache,MIPS";
		my $m = "12,12,13,11,3,0";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "daemon") {
		my $t = "Command,Name,State,PID,PPID,Threads,VMdata,VMexe,VMhwm,VMlib,VMpeak,VMpte,VMrss,VMsize,VMstk,RChar,WChar,Syscr,Syscw,RByte,WByte,UID,GID";
		my $m = "0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "dev") {
		my $t = "Category,Product,Subsystem,Capabilities,Vendor,Parameters";
		my $m = "100,0,0,16,0,15";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "disk") {
		my $t = "Device,Path,Type,Options,Capacity,Available,Serial";
		my $m = "0,0,0,2,103,3,7";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "mem") {
		my $t = "Total RAM,Available RAM,Total swap,Available swap,Buffered RAM,Cached RAM";
		my $m = "3,3,3,3,3,3";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "nic") {
		my $t = "Interface,Address,Broadcast,Netmask,MAC";
		my $m = "0,0,0,0,0";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "node") {
		my $t = "System,Release,Distribution,Platform,Model";
		my $m = "0,0,0,0";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "system") {
		my $t = "Baseboard manufacturer,Baseboard product,Baseboard version,System family,System manufacturer,System product,System version";
		my $m = "0,0,0,0,0,0,0";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "port") {
		my $t = "TCP";
		my $m = "5";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "run") {
		my $t = "Processes,Threads";
		my $m = "0,0";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "proc") {
		my $t = "Command,Name,State,PID,PPID,Threads,VMdata,VMexe,VMhwm,VMlib,VMpeak,VMpte,VMrss,VMsize,VMstk,RChar,WChar,Syscr,Syscw,RByte,WByte,UID,GID";
		my $m = "0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "software") {
		my $t = "Class,Name,Version,Size,URL";
		my $m = "4,0,0,3,1";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "user") {
		my $t = "UID,Primary group,Real name,Home directory";
		my $m = "0,0,0,0";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "util") {
		my $t = "One minute load,Five minute load,Ten minute load,Uptime,Idletime";
		my $m = "0,0,0,6,6";

		&tableMachineDetails({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
}

sub tableMachineDetails {
	my ($arg) = @_;

	my @t = split(/,/, $arg->{title});
	my @m = split(/,/, $arg->{modifier});

	#
	# Create table header
	#

	$PAGE .= "<table class=\"default\" cellpadding=\"3\" cellspacing=\"1\">";
	$PAGE .= "<tr class=\"top\">";

	my $i = 1;

	foreach my $t (@t) {
		if(!$arg->{order} || $arg->{order} eq "a") {
			$PAGE .= "<td class=\"header\" onMouseOver=\"this.className='select'\" onMouseOut=\"this.className='header'\"><a href=\"" . $SELF . "?slice=" . $arg->{slice} . "&" . "sort=" . $i++ . "&" . "order=d" . "\">" . $t . "</a></td>";
		}
		else {
			$PAGE .= "<td class=\"header\" onMouseOver=\"this.className='select'\" onMouseOut=\"this.className='header'\"><a href=\"" . $SELF . "?slice=" . $arg->{slice} . "&" . "sort=" . $i++ . "&" . "order=a" . "\">" . $t . "</a></td>";
		}
	}

	$PAGE .= "</tr>";

	#
	# Display and sort items in requested order
	#

	my @i = split(/$ITEM_DELIMITER/, $arg->{data});

	if($arg->{sort}) {
		my @k = ();

		foreach my $i (@i) {
			my @j = split(/$ITEM_SEPARATOR/, $i);

			$j[0] = $j[$arg->{sort}];

			push @k, join($ITEM_SEPARATOR, @j);
		}

		if(!$arg->{order} || $arg->{order} eq "a") {
			@i = sort { uc($a) cmp uc($b) } @k;
		}
		else {
			@i = sort { uc($b) cmp uc($a) } @k;
		}
	}

	if(@i) {
		foreach my $i (@i) {
			my $ev = 0;
			my @j = split(/$ITEM_SEPARATOR/, $i);

			shift(@j);

			$PAGE .= "<tr class=\"top\">";

			for(my $k = 0; $k < @t; $k++) {
				if($ev == 0) {
					$PAGE .= "<td class=\"c1\">";
				}
				else {
					$PAGE .= "<td class=\"c2\">";
				}

				$ev ^= 1;

				if(!$j[$k] || $j[$k] eq "" || $j[$k] eq "(null)") {
					$PAGE .= "n/a";
				}
				else {
					my $r = &tableMachineClean({ item => $j[$k], flag => $m[$k], key => $arg->{key}, slice => $arg->{slice} });

					if(!$r || $r eq "") {
						$PAGE .= "&nbsp;";
					}
					else {
						$PAGE .= $r;
					}
				}

				$PAGE .= "</td>";
			}

			$PAGE .= "</tr>";
		}
	}
	else {
		my $ev = 0;

		$PAGE .= "<tr class=\"top\">";

		foreach my $t (@t) {
			if($ev == 0) {
				$PAGE .= "<td class=\"c1\">n/a</td>";
			}
			else {
				$PAGE .= "<td class=\"c2\">n/a</td>";
			}

			$ev ^= 1;
		}

		$PAGE .= "</tr>";
	}

	$PAGE .= "</table>";
}

sub tableMachineListing {
	my ($arg) = @_;

	$pr = "";

	if($arg->{slice} eq "security") {
		my $t = "Host,Serial number,Security number,Location";
		my $m = "21,0,0,0";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 5; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "repair") {
		my $t = "Host,Is in service,Estimated service duration,Date of service delivery,Method of service delivery,Repaired,Last repair date";
		my $m = "21,9,18,20,0,17,20";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 8; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "warranty") {
		my $t = "Host,Acquired,Warranty";
		my $m = "21,20,19";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 14; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "addinfo") {
		my $t = "Host,Additional information,Description";
		my $m = "21,0,0";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			for(my $j = 0; $j < 16; $j++) {
				$i =~ s/^.*?$ITEM_SEPARATOR//;
			}

			push @j, $i;
		}

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "fle" || $arg->{slice} eq "files") {
		my $t = "Host,Owner,Name,Filename,Size,Public,Description,Additional information";
		my $m = "21,0,0,14,3,9,0,0";

		my @j = ();
		my @i = split(/$ITEM_DELIMITER/, $arg->{data});

		foreach my $i (@i) {
			my @s = split(/$ITEM_SEPARATOR/, $i);

			$s[3] .= "|" . $s[8];
			$i = join($ITEM_SEPARATOR, @s);

			push @j, $i;
		}

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => join($ITEM_DELIMITER, @j), title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "pwd" || $arg->{slice} eq "passwds") {
		my $t = "Host,Owner,Name,Service,Username,Password,Public,Description,Additional information";
		my $m = "21,0,0,0,0,8,9,0,0";

		&tableMachineListings({ slice => $arg->{slice}, key => $arg->{key}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "cpu") {
		my $t = "Host,Processors,Cores,Siblings,Speed,Cache,MIPS";
		my $m = "21,12,12,13,11,3,0";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "daemon") {
		my $t = "Host,Command,Name,State,PID,PPID,Threads,VMdata,VMexe,VMhwm,VMlib,VMpeak,VMpte,VMrss,VMsize,VMstk,RChar,WChar,Syscr,Syscw,RByte,WByte,UID,GID";
		my $m = "21,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "dev") {
		my $t = "Host,Category,Product,Subsystem,Capabilities,Vendor,Parameters";
		my $m = "21,100,0,0,16,0,15";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "disk") {
		my $t = "Host,Device,Path,Type,Options,Capacity,Available,Serial";
		my $m = "21,0,0,0,2,103,3,7";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "mem") {
		my $t = "Host,Total RAM,Available RAM,Total swap,Available swap,Buffered RAM,Cached RAM";
		my $m = "21,3,3,3,3,3,3";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "nic") {
		my $t = "Host,Interface,Address,Broadcast,Netmask,MAC";
		my $m = "21,0,0,0,0,0";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "node") {
		my $t = "Host,System,Release,Distribution,Platform,Model";
		my $m = "21,0,0,0,0";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "system") {
		my $t = "Host,Baseboard manufacturer,Baseboard product,Baseboard version,System family,System manufacturer,System product,System version";
		my $m = "21,0,0,0,0,0,0,0";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "port") {
		my $t = "Host,TCP";
		my $m = "21,5";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "run") {
		my $t = "Host,Processes,Threads";
		my $m = "21,0,0";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "proc") {
		my $t = "Host,Command,Name,State,PID,PPID,Threads,VMdata,VMexe,VMhwm,VMlib,VMpeak,VMpte,VMrss,VMsize,VMstk,RChar,WChar,Syscr,Syscw,RByte,WByte,UID,GID";
		my $m = "21,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "software") {
		my $t = "Host,Class,Name,Version,Size,URL";
		my $m = "21,4,0,0,3,1";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "user") {
		my $t = "Host,UID,Primary group,Real name,Home directory";
		my $m = "21,0,0,0,0";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
	elsif($arg->{slice} eq "util") {
		my $t = "Host,One minute load,Five minute load,Ten minute load,Uptime,Idletime";
		my $m = "21,0,0,0,6,6";

		&tableMachineListings({ slice => $arg->{slice}, sort => $arg->{sort}, order=> $arg->{order}, data => $arg->{data}, title => $t, modifier => $m });
	}
}

sub tableMachineListings {
	my ($arg) = @_;

	my @t = split(/,/, $arg->{title});
	my @m = split(/,/, $arg->{modifier});

	#
	# Create table header
	#

	$PAGE .= "<table class=\"default\" cellpadding=\"3\" cellspacing=\"1\">";
	$PAGE .= "<tr class=\"top\">";

	my $i = 0;

	foreach my $t (@t) {
		if($i < 1) {
			$PAGE .= "<td class=\"header\" onMouseOver=\"this.className='select'\" onMouseOut=\"this.className='header'\"><a href=\"#\">" . $t . "</a></td>";

			$i++;
		}
		else {
			if(!$arg->{order} || $arg->{order} eq "a") {
				$PAGE .= "<td class=\"header\" onMouseOver=\"this.className='select'\" onMouseOut=\"this.className='header'\"><a href=\"" . $SELF . "?slice=" . $arg->{slice} . "&" . "sort=" . $i++ . "&" . "order=d" . "\">" . $t . "</a></td>";
			}
			else {
				$PAGE .= "<td class=\"header\" onMouseOver=\"this.className='select'\" onMouseOut=\"this.className='header'\"><a href=\"" . $SELF . "?slice=" . $arg->{slice} . "&" . "sort=" . $i++ . "&" . "order=a" . "\">" . $t . "</a></td>";
			}
		}
	}

	$PAGE .= "</tr>";

	#
	# Display and sort items in requested order
	#

	my @i = split(/$ITEM_DELIMITER/, $arg->{data});

	if($arg->{sort}) {
		my @k = ();

		foreach my $i (@i) {
			my @j = split(/$ITEM_SEPARATOR/, $i);
			my $t = $j[0];

			$j[0] = $j[$arg->{sort}];

			push @j, $t;
			push @k, join($ITEM_SEPARATOR, @j);
		}

		if(!$arg->{order} || $arg->{order} eq "a") {
			@i = sort { uc($a) cmp uc($b) } @k;
		}
		else {
			@i = sort { uc($b) cmp uc($a) } @k;
		}

		@k = ();

		foreach my $i (@i) {
			my @j = split(/$ITEM_SEPARATOR/, $i);

			$j[0] = pop(@j);

			push @k, join($ITEM_SEPARATOR, @j);
		}

		@i = @k;
	}

	if(@i) {
		foreach my $i (@i) {
			my @j = split(/$ITEM_SEPARATOR/, $i);
			my $id = shift(@j);

			if(!$id || $id == 0 || $id eq "" || $id eq "(null)") {
				my $ev = 0;

				$PAGE .= "<tr class=\"top\">";

				foreach my $t (@t) {
					if($ev == 0) {
						$PAGE .= "<td class=\"c1\">n/a</td>";
					}
					else {
						$PAGE .= "<td class=\"c2\">n/a</td>";
					}

					$ev ^= 1;
				}

				$PAGE .= "</tr>";

				last;
			}

			my $nd = "";
			my $ev = 0;

			if($SESSION_CACHE{"node" . $id} && $SESSION_CACHE{"node" . $id} ne "") {
				$nd = $SESSION_CACHE{"node" . $id};
			}
			else {
				my @r = &sendCommand({ command => "pullMachineByID", item => $id, domain => "", param => "name", option => "" });

				if(checkError({ packet => \@r }) == 0) {
					@r = split(/$ITEM_SEPARATOR/, $r[3]);

					$nd = $r[1] . "|" . $r[2];

					$SESSION_CACHE{"node" . $id} = $nd;
				}
			}

			if($nd ne "") {
				unshift(@j, $nd);

				$PAGE .= "<tr class=\"top\">";

				for(my $k = 0; $k < @t; $k++) {
					if($ev == 0) {
						$PAGE .= "<td class=\"c1\">";
					}
					else {
						$PAGE .= "<td class=\"c2\">";
					}

					$ev ^= 1;

					if(!$j[$k] || $j[$k] eq "" || $j[$k] eq "(null)") {
						$PAGE .= "n/a";
					}
					else {
						my $u = &tableMachineClean({ item => $j[$k], flag => $m[$k], key => $arg->{key}, slice => $arg->{slice} });

						if(!$u || $u eq "") {
							$PAGE .= "&nbsp;";
						}
						else {
							$PAGE .= $u;
						}
					}

					$PAGE .= "</td>";
				}

				$PAGE .= "</tr>";
			}
		}
	}
	else {
		my $ev = 0;

		$PAGE .= "<tr class=\"top\">";

		foreach my $t (@t) {
			if($ev == 0) {
				$PAGE .= "<td class=\"c1\">n/a</td>";
			}
			else {
				$PAGE .= "<td class=\"c2\">n/a</td>";
			}

			$ev ^= 1;
		}

		$PAGE .= "</tr>";
	}

	$PAGE .= "</table>";
}

sub tableMachineClean {
	my ($arg) = @_;

	my $r = "";

	if($arg->{flag} == 0) {
		$r = $arg->{item};
	}
	elsif($arg->{flag} == 100) {
		$r = $arg->{item};
		$pr = $arg->{item};
	}
	elsif($arg->{flag} == 1) {
		if($arg->{item} =~ /^http:\/\/|^https:\/\/|^ftp:\/\//) {
			$r = "<a href=\"" . $arg->{item} . "\" target=\"_blank\" style=\"color: #000000;\">" . $arg->{item} . "</a>";
		}
	}
	elsif($arg->{flag} == 2) {
		$arg->{item} =~ s/,/, /go;
		$arg->{item} =~ s/\//\/ /go;

		$r = $arg->{item};
	}
	elsif($arg->{flag} == 3 || $arg->{flag} == 103) {
		if($arg->{flag} == 103) {
			$pr = $arg->{item};
		}
		elsif($pr ne "" && $pr ne "n/a" && $pr > $arg->{item}) {
			if($arg->{item} != 0) {
				$pr /= $arg->{item};
				$pr = int(100 / $pr);

				if($pr < 2) {
					$r .= "<font color=\"#dd4444\">" . $pr . "%</font>&nbsp;/&nbsp;";
				}
				else {
					$r .= $pr . "%&nbsp;/&nbsp;";
				}
			}
		}

		if(int($arg->{item}) > 1000000000000000) {
			$arg->{item} /= 1000000000000000;

			$r .= sprintf("%.1fEb", $arg->{item});
		}
		elsif(int($arg->{item}) > 1000000000000) {
			$arg->{item} /= 1000000000000;

			$r .= sprintf("%.1fPb", $arg->{item});
		}
		elsif(int($arg->{item}) > 1000000000) {
			$arg->{item} /= 1000000000;

			$r .= sprintf("%.1fTb", $arg->{item});
		}
		elsif(int($arg->{item}) > 1000000) {
			$arg->{item} /= 1000000;

			$r .= sprintf("%.1fGb", $arg->{item});
		}
		elsif(int($arg->{item}) > 1000) {
			$arg->{item} /= 1000;

			$r .= sprintf("%.1fMb", $arg->{item});
		}
		else {
			$r .= sprintf("%.1fKb", $arg->{item});
		}
	}
	elsif($arg->{flag} == 4) {
		if($arg->{item} == 1) {
			$r = "deb";
		}
		elsif($arg->{item} == 2) {
			$r = "rpm";
		}
		elsif($arg->{item} == 3) {
			$r = "app";
		}
		elsif($arg->{item} == 4) {
			$r = "pkg";
		}
		elsif($arg->{item} == 100) {
			$r = "msi";
		}
	}
	elsif($arg->{flag} == 5) {
		my @n = split(/\|/, $arg->{item});

		$r = "<ul class=\"summary\">";

		foreach my $n (@n) {
			if($SESSION_CACHE{"port" . $n} && $SESSION_CACHE{"port" . $n} ne "") {
				my ($p, $m, $d) = split(/\|/, $SESSION_CACHE{"port" . $n}, 3);

				if($p && $m && $d) {
					$r .= "<li>" . $p . ", " . $m . " - " . $d . "</li>";
				}
				elsif($p && $m) {
					$r .= "<li>" . $p . ", " . $m . "</li>";
				}
				else {
					$r .= "<li>" . $n . "</li>";
				}
			}
			else {
				@r = &sendCommand({ command => "pullTCP", item => "", domain => "", param => $n, option => "" });

				if(checkError({ packet => \@r }) == 0) {
					my ($p, $m, $d) = split(/$ITEM_SEPARATOR/, $r[3], 3);

					if($p && $m && $d) {
						$r .= "<li>" . $p . ", " . $m . " - " . $d . "</li>";
					}
					elsif($p && $m) {
						$r .= "<li>" . $p . ", " . $m . "</li>";
					}
					else {
						$r .= "<li>" . $n . "</li>";
					}

					$SESSION_CACHE{"port" . $n} = $p . "|" . $m . "|" . $d;
				}
				else {
					$r .= "<li>" . $n . "</li>";
				}
			}
		}

		$r .= "</ul>";
	}
	elsif($arg->{flag} == 6) {
		my $d = 0;

		if($arg->{item} > 31536000) {
			$r .= int(int($arg->{item}) / 31536000) . " years";
			$arg->{item} %= 31536000;
			$d++;
		}
		else {
			$d = 0;
		}

		if($arg->{item} > 2592000) {
			if($d != 0) {
				$r .= ", ";
			}

			$r .= int(int($arg->{item}) / 2592000) . " months";
			$arg->{item} %= 2592000;
			$d++;
		}
		else {
			$d = 0;
		}

		if($arg->{item} > 604800) {
			if($d != 0) {
				$r .= ", ";
			}

			$r .= int(int($arg->{item}) / 604800) . " weeks";
			$arg->{item} %= 604800;
			$d++;
		}
		else {
			$d = 0;
		}

		if($arg->{item} > 86400) {
			if($d != 0) {
				$r .= ", ";
			}

			$r .= int(int($arg->{item}) / 86400) . " days";
			$arg->{item} %= 86400;
			$d++;
		}
		else {
			$d = 0;
		}

		if($arg->{item} > 3600) {
			if($d != 0) {
				$r .= ", ";
			}

			$r .= int(int($arg->{item}) / 3600) . " hours";
			$arg->{item} %= 3600;
			$d++;
		}
		else {
			$d = 0;
		}

		if($arg->{item} > 60) {
			if($d != 0) {
				$r .= ", ";
			}

			$r .= int(int($arg->{item}) / 60) . " minutes";
		}
		else {
			if($d != 0) {
				$r .= ", ";
			}

			$r .= int($arg->{item}) . " seconds";
		}
	}
	elsif($arg->{flag} == 7) {
		$r = "0" x int(16 - length($arg->{item})) . $arg->{item};
		$r = join('-', unpack('A4' x 4, $r));
	}
	elsif($arg->{flag} == 8) {
		if($arg->{key} && $arg->{key} ne "") {
			my @r = &sendCommand({ command => "decryptPassword", item => "", domain => "", param => $arg->{item}, option => $arg->{key} });

			if(checkError({ packet => \@r }) == 0) {
				$r[3] = cleanNull({ string => $r[3] });

				if(!$r[3] || $r[3] eq "") {
					$r = "<a href=\"javascript:promptPasswordKey();\" style=\"color: #000000;\">[&nbsp;decrypt&nbsp;]</a>";
				}
				else {
					$r = $r[3];
				}
			}
		}
		else {
			$r = "<a href=\"javascript:promptPasswordKey();\" style=\"color: #000000;\">[&nbsp;decrypt&nbsp;]</a>";
		}
	}
	elsif($arg->{flag} == 9) {
		if($arg->{item} eq "1") {
			$r = "Yes";
		}
	}
	elsif($arg->{flag} == 10) {
		$r = "n/a";
	}
	elsif($arg->{flag} == 11) {
		$r = int($arg->{item} / 100) * 100;

		if($r <= 1000) {
			$r .= "MHz";
		}
		elsif($r <= 1000000) {
			$r /= 1000;
			$r = sprintf("%.1fGHz", $r);
		}
		elsif($r <= 1000000000) {
			$r /= 1000000;
			$r = snprintf("%.1fTHz", $r);
		}
		else {
			$r /= 1000000000;
			$r = snprintf("%.1PHz", $r);
		}
	}
	elsif($arg->{flag} == 12) {
		if($arg->{item} eq "0" || $arg->{item} eq "n/a") {
			$r = "1";
		}

		if($NUMWORDS{$arg->{item}}) {
			$r = ucfirst($NUMWORDS{$arg->{item}});
		}
	}
	elsif($arg->{flag} == 13) {
		if($arg->{item} ne "0" && $arg->{item} ne "n/a") {
			if($NUMWORDS{$arg->{item}}) {
				$r = ucfirst($NUMWORDS{$arg->{item}});
			}
		}
	}
	elsif($arg->{flag} == 14) {
		my ($i, $j) = split(/\|/, $arg->{item}, 2);

		$r = "<a href=\"file.pl?file=" . $j . "&name=" . $i . "\" style=\"color: #000000;\">" . $i . "</a>";
	}
	elsif($arg->{flag} == 15) {
		my @n = split(/\|/, $arg->{item});

		if($pr eq "acadapter" || $pr eq "battery" || $pr eq "btacl" || $pr eq "bthci" || $pr eq "btsco" || $pr eq "killswitch" || $pr eq "panel" || $pr eq "lightsensor" || $pr eq "mmc" || $pr eq "mmchost" || $pr eq "netbluetooth" || $pr eq "netirda" || $pr eq "serial" || $pr eq "v4l") {
			$r .= "n/a";
		}
		elsif($pr eq "button" || $pr eq "camera" || $pr eq "ide" || $pr eq "idehost" || $pr eq "ieee1394" || $pr eq "ieee1394host" || $pr eq "input" || $pr eq "inputjoystick" || $pr eq "inputkeyboard" || $pr eq "inputkeymap" || $pr eq "inputkeypad" || $pr eq "inputkeys" || $pr eq "inputmouse" || $pr eq "inputswitch" || $pr eq "inputtablet") {
			$r .= "Device:&nbsp;" . $n[0] . "<br />";
		}
		elsif($pr eq "net" || $pr eq "net80203") {
			$r .= "Address:&nbsp;" . $n[0] . "<br />";
			$r .= "Hardware&nbsp;id:&nbsp;" . $n[1] . "<br />";
			$r .= "Interface:&nbsp;" . $n[2] . "<br />";
		}
		elsif($pr eq "processor") {
			$r .= "Number:&nbsp;" . $n[0] . "<br />";
			$r .= "Can&nbsp;throttle:&nbsp;" . $n[1] . "<br />";
		}
		elsif($pr eq "net80211" || $pr eq "net80211ctrl" || $pr eq "netbridge" || $pr eq "netloopback" || $pr eq "pcmciasocket" || $pr eq "portableaudioplayer" || $pr eq "powermanagement" || $pr eq "printer" || $pr eq "scanner") {
			$r .= "Address:&nbsp;" . $n[0] . "<br />";
			$r .= "Hardware&nbsp;id:&nbsp;" . $n[1] . "<br />";
			$r .= "Interface:&nbsp;" . $n[2] . "<br />";
		}
		elsif($pr eq "scsi" || $pr eq "scsihost") {
			$r .= "Host:&nbsp;" . $n[0] . "<br />";
		}
		elsif($pr eq "sound") {
			$r .= "Sound&nbsp;card:&nbsp;" . $n[0] . "<br />";
		}
		elsif($pr eq "storage" || $pr eq "system" || $pr eq "tape") {
			$r .= "Model:&nbsp;" . $n[5] . "<br />";
			$r .= "Bus:&nbsp;" . $n[1] . "<br />";
			$r .= "Drive&nbsp;type:&nbsp;" . $n[2] . "<br />";
			$r .= "Size:&nbsp;" . $n[9] . "<br />";
			$r .= "Hotpluggable:&nbsp;" . $n[3] . "<br />";
			$r .= "Removable:&nbsp;" . $n[7] . "<br />";
			$r .= "Automount&nbsp;enabled:&nbsp;" . $n[0] . "<br />";
			$r .= "Media&nbsp;check&nbsp;enabled:&nbsp;" . $n[4] . "<br />";
			$r .= "No&nbsp;partitions:&nbsp;" . $n[6] . "<br />";
			$r .= "Requires&nbsp;eject:&nbsp;" . $n[8] . "<br />";
		}
		elsif($pr eq "volume") {
			$r .= "Device:&nbsp;" . $n[0] . "<br />";
			$r .= "Is&nbsp;volume:&nbsp;" . $n[1] . "<br />";
			$r .= "Major:&nbsp;" . $n[2] . "<br />";
			$r .= "Minor:&nbsp;" . $n[3] . "<br />";
		}
	}
	elsif($arg->{flag} == 16) {
		my @n = split(/\|/, $arg->{item});

		@n = sort { uc($a) cmp uc($b) } @n;

		foreach my $n (@n) {
			$r .= $n . "<br />";
		}
	}
	elsif($arg->{flag} == 17) {
		if($SUMWORDS{$arg->{item}}) {
			$r = ucfirst($SUMWORDS{$arg->{item}});
		}
		else {
			$r = $arg->{item} . " times";
		}
	}
	elsif($arg->{flag} == 18) {
		if($SESSION_CACHE{"esd" . $arg->{item}} && $SESSION_CACHE{"esd" . $arg->{item}} ne "") {
			$r = $SESSION_CACHE{"esd" . $arg->{item}};
		}
		else {
			@r = &sendCommand({ command => "pullMisc", item => "", domain => "", param => "esd", option => "" });

			if(checkError({ packet => \@r }) == 0) {
				my @s = split(/$ITEM_DELIMITER/, $r[3]);

				foreach my $s (@s) {
					my ($p, $m) = split(/$ITEM_SEPARATOR/, $s);

					$SESSION_CACHE{"esd" . $p} = $m;

					if($p eq $arg->{item}) {
						$r = $m;

						last;
					}
				}
			}
		}

		if($r eq "") {
			$r = "n/a";
		}
	}
	elsif($arg->{flag} == 19) {
		if($SESSION_CACHE{"warranty" . $arg->{item}} && $SESSION_CACHE{"warranty" . $arg->{item}} ne "") {
			$r = $SESSION_CACHE{"warranty" . $arg->{item}};
		}
		else {
			@r = &sendCommand({ command => "pullMisc", item => "", domain => "", param => "warranty", option => "" });

			if(checkError({ packet => \@r }) == 0) {
				my @s = split(/$ITEM_DELIMITER/, $r[3]);

				foreach my $s (@s) {
					my ($p, $m) = split(/$ITEM_SEPARATOR/, $s);

					$SESSION_CACHE{"warranty" . $p} = $m;

					if($p eq $arg->{item}) {
						$r = $m;

						last;
					}
				}
			}
		}

		if($r eq "") {
			$r = "n/a";
		}
	}
	elsif($arg->{flag} == 20) {
		if($arg->{item} =~ /^0/) {
			$r = "n/a";
		}
		else {
			$arg->{item} =~ s/\s+.*//;
			$arg->{item} =~ s/\-//go;

			my ($y, $n, $d) = (int(substr($arg->{item}, 0, 4)), int(substr($arg->{item}, 4, 2)), int(substr($arg->{item}, 6, 2)));

			$r = $d . ". ";

			if($SESSION_CACHE{"month" . $n} && $SESSION_CACHE{"month" . $n} ne "") {
				$r .= $SESSION_CACHE{"month" . $n} . ", ";
			}
			else {
				@r = &sendCommand({ command => "pullMisc", item => "", domain => "", param => "month", option => "" });

				if(checkError({ packet => \@r }) == 0) {
					my @s = split(/$ITEM_DELIMITER/, $r[3]);

					foreach my $s (@s) {
						my ($p, $m) = split(/$ITEM_SEPARATOR/, $s);

						$SESSION_CACHE{"month" . $p} = $m;

						if($p eq $n) {
							$r .= $m . ", ";

							last;
						}
					}
				}
				else {
					$r .= $n . ",";
				}
			}

			$r .= $y;
		}
	}
	elsif($arg->{flag} == 21) {
		my @p = ();
		my $n = $arg->{item};

		if($SESSION_CACHE{"popup"} && $SESSION_CACHE{"popup"} ne "") {
			@p = split(/,/, $SESSION_CACHE{"popup"}, 2);
		}
		else {
			@p = split(/,/, &prefsPopup(), 2);

			$SESSION_CACHE{"popup"} = $p[0] . "," . $p[1];
		}

		$n =~ s/\|/./go;

		$r = "<a href=\"javascript:popupMachine('" . $arg->{item} . "', '" . $arg->{slice} . "', '" . $p[0] . "', '" . $p[1] . "');\" style=\"color: #000000;\">" . $n . "</a>";
	}

	return $r;
}

sub tableMachineBriefSlice {
	my ($arg) = @_;

	&tableMachineOS({ system => $arg->{system}, distro => $arg->{distro} });

	$MENU .= "<ul id=\"slices\">";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=node\">Node</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=system\">System</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=cpu\">Processor</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=mem\">Memory</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=dev\">Devices</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=nic\">Network</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=disk\">Storage</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=software\">Software</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=daemon\">Services</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=proc\">Processes</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=run\">Tasks</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=port\">Open ports</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=util\">Utilization</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=user\">User</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=security\">Security</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=repair\">Repair</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=warranty\">Warranty</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=addinfo\">Additional info</a></li>";
	$MENU .= "</ul>";
}

sub tableMachineListingSlice {
	my ($arg) = @_;

	&tableMachineOS({ system => $arg->{system}, distro => $arg->{distro} });

	$MENU .= "<ul id=\"slices\">";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=node\">Node</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=system\">System</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=cpu\">Processor</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=mem\">Memory</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=dev\">Devices</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=nic\">Network</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=disk\">Storage</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=software\">Software</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=daemon\">Services</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=proc\">Processes</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=run\">Tasks</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=port\">Open ports</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=util\">Utilization</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=user\">User</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=security\">Security</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=repair\">Repair</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=warranty\">Warranty</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=addinfo\">Additional info</a></li>";
	$MENU .= "</ul>";
}

sub tableMachineDetailSlice {
	my ($arg) = @_;

	&tableMachineOS({ system => $arg->{system}, distro => $arg->{distro} });

	$MENU .= "<ul id=\"slices\">";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=node\">Node</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=system\">System</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=cpu\">Processor</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=mem\">Memory</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=dev\">Devices</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=nic\">Network</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=disk\">Storage</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=software\">Software</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=daemon\">Services</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=proc\">Processes</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=run\">Tasks</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=port\">Open ports</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=util\">Utilization</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=user\">User</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=security\">Security</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=repair\">Repair</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=warranty\">Warranty</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=addinfo\">Additional info</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=files\">Files</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=passwds\">Passwords</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?action=note\" style=\"background: #405173;\">Edit notes</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?action=modify\" style=\"background: #407362;\">Edit attributes</a></li>";
	$MENU .= "</ul>";
}

sub tableDMachineDetailSlice {
	my ($arg) = @_;

	&tableMachineOS({ system => $arg->{system}, distro => $arg->{distro} });

	$MENU .= "<ul id=\"slices\">";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=node\">Node</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=system\">System</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=cpu\">Processor</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=mem\">Memory</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=dev\">Devices</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=nic\">Network</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=disk\">Storage</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=software\">Software</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=daemon\">Services</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=proc\">Processes</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=run\">Tasks</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=port\">Open ports</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=util\">Utilization</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=user\">User</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=security\">Security</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=repair\">Repair</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=warranty\">Warranty</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=addinfo\">Additional info</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?slice=files\">Files</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?slice=passwds\">Passwords</a></li>";

	$MENU .= "<li><a href=\"" . $SELF . "?action=note\" style=\"background: #405173;\">Notes</a></li>";
	$MENU .= "<li><a href=\"" . $SELF . "?action=modify\" style=\"background: #407362;\">Edit attributes</a></li>";
	$MENU .= "</ul>";
}

sub tableMachineDomainSlice {
	my ($arg) = @_;

	$MENU .= "<table class=\"logo\" cellpadding=\"0\" cellspacing=\"0\">";
	$MENU .= "<tr class=\"middle\">";
	$MENU .= "<td class=\"c3\" width=\"1\"><img alt=\"\" id=\"logo\" src=\"/pics/machine/machine.png\"></td>";
	$MENU .= "<td class=\"c3\">Active<br />machines</td>";
	$MENU .= "</tr>";
	$MENU .= "</table>";

	$MENU .= "<ul id=\"slices\">";
	$MENU .= "</ul>";
}

sub tableDMachineDomainSlice {
	my ($arg) = @_;

	$MENU .= "<table class=\"logo\" cellpadding=\"0\" cellspacing=\"0\">";
	$MENU .= "<tr class=\"middle\">";
	$MENU .= "<td class=\"c3\" width=\"1\"><img alt=\"\" id=\"logo\" src=\"/pics/machine/machine_d.png\"></td>";
	$MENU .= "<td class=\"c3\">Disposed<br />machines</td>";
	$MENU .= "</tr>";
	$MENU .= "</table>";

	$MENU .= "<ul id=\"slices\">";
	$MENU .= "</ul>";
}

sub tableMachineOS {
	my ($arg) = @_;

	my $p = "default";

	if($arg->{system} =~ /^Summary/i) {
		$p = "summary";
	}
	elsif($arg->{system} =~ /^Listing/i) {
		$p = "listing";
	}
	elsif($arg->{system} =~ /Windows/i) {
		$p = "windows";
	}
	elsif($arg->{system} =~ /Free.*BSD/i) {
		$p = "freebsd";
	}
	elsif($arg->{system} =~ /Net.*BSD/i) {
		$p = "netbsd";
	}
	elsif($arg->{system} =~ /Open.*BSD/i) {
		$p = "openbsd";
	}
	elsif($arg->{system} =~ /Open.*VMS/i) {
		$p = "openvms";
	}
	elsif($arg->{system} =~ /Darwin|Mac.*OS/i) {
		$p = "macos";
	}
	elsif($arg->{system} =~ /Open.*Solaris/i) {
		$p = "opensolaris";
	}
	elsif($arg->{system} =~ /Sun|Solaris/i) {
		$p = "solaris";
	}
	elsif($arg->{system} =~ /IRIX/i) {
		$p = "irix";
	}
	elsif($arg->{system} =~ /HP.*UX/i) {
		$p = "hpux";
	}
	elsif($arg->{system} =~ /AIX/i) {
		$p = "aix";
	}
	elsif($arg->{system} =~ /Minix/i) {
		$p = "minix";
	}
	elsif($arg->{system} =~ /Plan.*9/i) {
		$p = "plan9";
	}
	elsif($arg->{system} =~ /nto|QNX/i) {
		$p = "qnx";
	}
	elsif($arg->{system} =~ /Risc.*OS/i) {
		$p = "riscos";
	}
	elsif($arg->{system} =~ /OS.*2/i) {
		$p = "os2";
	}
	elsif($arg->{system} =~ /Be.*OS/i) {
		$p = "beos";
	}
	elsif($arg->{system} =~ /Amiga.*OS/i) {
		$p = "amigaos";
	}
	elsif($arg->{system} =~ /Linux/i) {
		if($arg->{distro} =~ /Cent/i) {
			$p = "linux_centos";
		}
		elsif($arg->{distro} =~ /Debian/i) {
			$p = "linux_debian";
		}
		elsif($arg->{distro} =~ /Fedora/i) {
			$p = "linux_fedora";
		}
		elsif($arg->{distro} =~ /Gentoo/i) {
			$p = "linux_gentoo";
		}
		elsif($arg->{distro} =~ /Mandr/i) {
			$p = "linux_mandriva";
		}
		elsif($arg->{distro} =~ /Red.*Hat/i) {
			$p = "linux_redhat";
		}
		elsif($arg->{distro} =~ /Slack/i) {
			$p = "linux_slackware";
		}
		elsif($arg->{distro} =~ /SuSE/i) {
			$p = "linux_suse";
		}
		elsif($arg->{distro} =~ /Ubuntu/i) {
			$p = "linux_ubuntu";
		}
		elsif($arg->{distro} =~ /Yellow.*Dog/i) {
			$p = "linux_yellowdog";
		}
		else {
			$p = "linux_gen";
		}
	}

	$MENU .= "<table class=\"plain\" cellpadding=\"0\" cellspacing=\"0\">";
	$MENU .= "<tr class=\"middle\">";
	$MENU .= "<td class=\"c3\" width=\"1\"><img alt=\"\" id=\"logo\" src=\"/pics/machine/" . $p . ".png\"></td>";
	$MENU .= "<td class=\"c3\">" . $arg->{system} . "</td>";
	$MENU .= "</tr>";
	$MENU .= "</table>";
}

1;
